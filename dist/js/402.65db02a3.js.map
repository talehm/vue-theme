{"version":3,"file":"js/402.65db02a3.js","mappings":"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","sources":["webpack://vue-theme/./src/views/Definition.vue","webpack://vue-theme/src/views/Definition.vue","webpack://vue-theme/./src/views/Definition.vue?44be","webpack://vue-theme/./src/views/Definition.vue?b904","webpack://vue-theme/../../../src/components/VIcon/VIcon.ts","webpack://vue-theme/../../../src/mixins/sizeable/index.ts"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\",\"lg\":\"12\",\"xl\":\"8\"}},[_c('div',[_c('searchbar',{staticClass:\"pl-16 pr-16 mx-auto\"}),_c('v-card',{staticClass:\"mx-auto ma-2\"},[(_vm.item)?_c('div',{staticClass:\"definition\"},[_c('header',{staticClass:\"mx-auto pa-8\"},[_c('h1',{staticClass:\"text-h4 text--primary font-weight-medium\",domProps:{\"innerHTML\":_vm._s(_vm.content.word)}}),_c('br'),(_vm.pronunciation)?_c('span',{staticClass:\"text-subtitle-1 blue-grey--text text--lighten-1\"},[_vm._v(\"[\"+_vm._s(_vm.pronunciation)+\"]\")]):_vm._e(),(_vm.audio)?_c('v-icon',{staticClass:\"font-size-sm green--text\",attrs:{\"dark\":\"\"},on:{\"click\":_vm.playAudio}},[_vm._v(\" fa4 fa-solid fa-play \")]):_vm._e()],1),_vm._l((_vm.content.results),function(item,i){return _c('v-row',{key:i,staticClass:\"pa-0 mb-4\",attrs:{\"no-gutters\":\"\"}},[_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('definition',{attrs:{\"item\":item,\"length\":_vm.content.results.length,\"index\":i + 1}})],1)],1)})],2):_vm._e()])],1)]),_c('v-col',[_c('div',[_c('siderbar')],1)])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n\t<div>\r\n\t\t<v-row>\r\n\t\t\t<v-col cols=\"12\" lg=\"12\" xl=\"8\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<searchbar class=\" pl-16 pr-16 mx-auto\"></searchbar>\r\n\t\t\t\t\t<v-card class=\"mx-auto ma-2\">\r\n\t\t\t\t\t\t<div v-if=\"item\" class=\"definition\">\r\n\t\t\t\t\t\t\t<header class=\"mx-auto pa-8\">\r\n\t\t\t\t\t\t\t\t<h1 class=\"text-h4 text--primary font-weight-medium\" v-html=\"content.word\"></h1><br>\r\n\t\t\t\t\t\t\t\t<span v-if=\"pronunciation\" class=\"text-subtitle-1 blue-grey--text text--lighten-1\">[{{\r\n\t\t\t\t\t\t\tpronunciation }}]</span>\r\n\t\t\t\t\t\t\t\t<v-icon dark @click=\"playAudio\" class=\"font-size-sm green--text\" v-if=\"audio\"> fa4\r\n\t\t\t\t\t\t\t\t\tfa-solid fa-play </v-icon>\r\n\t\t\t\t\t\t\t</header>\r\n\t\t\t\t\t\t\t<v-row no-gutters class=\"pa-0 mb-4\" v-for=\"(item, i) in content.results\" :key=\"i\">\r\n\t\t\t\t\t\t\t\t<v-col cols=\"12\">\r\n\t\t\t\t\t\t\t\t\t<definition :item=\"item\" :length=\"content.results.length\" :index=\"i + 1\" />\r\n\t\t\t\t\t\t\t\t</v-col>\r\n\t\t\t\t\t\t\t</v-row>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</v-card>\r\n\t\t\t\t</div>\r\n\t\t\t</v-col>\r\n\t\t\t<v-col>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<siderbar />\r\n\t\t\t\t</div>\r\n\t\t\t</v-col>\r\n\t\t</v-row>\r\n\t</div>\r\n</template>\r\n<script>\r\nimport postMixin from \"@/components/mixins/post-default\"\r\n// import he from 'he';\r\n\r\nexport default {\r\n\tname: \"DefinitionView\",\r\n\tmixins: [postMixin],\r\n\tcomponents: {\r\n\t\tsearchbar: () => import(\"@/components/details/searchbar\"),\r\n\t\tsiderbar: () => import(\"@/components/details/sidebar\"),\r\n\t\tdefinition: () => import(\"@/components/details/definition\")\r\n\t},\r\n\tcomputed: {\r\n\t\titem() {\r\n\t\t\treturn this.$store.state.definition;\r\n\t\t},\r\n\t\tcontent() {\r\n\t\t\tconst content = this.item.content.rendered\r\n\t\t\t\t.replaceAll(\"<p>\", \"\") // Remove opening <p> tags\r\n\t\t\t\t.replaceAll(\"</p>\", \"\") // Remove closing </p> tags\r\n\t\t\t\t.trim();\r\n\r\n\t\t\t// Replace HTML entities\r\n\t\t\tlet fixed = content.replace(/\"/g, \"'\")\r\n\t\t\t\t.replace(/&#8220;/g, '\"') // Replace opening quotes\r\n\t\t\t\t.replace(/&#8221;/g, '\"') // Replace closing quotes\r\n\t\t\t\t.replace(/&#8216;/g, \"'\") // Replace single opening quote\r\n\t\t\t\t.replace(/&#8217;/g, \"'\") // Replace single closing quote\r\n\t\t\t\t.replace(/&#8230;/g, \"...\") // Ellipsis\r\n\t\t\t\t.replace(/&#8211;/g, \"-\") // En dash\r\n\t\t\t\t.replace(/&#8212;/g, \"--\") // Em dash\r\n\t\t\t\t.replace(/&#8243;/g, '\"'); // Double prime\r\n\r\n\t\t\t// Optional: Check if the content is a valid JSON string before parsing\r\n\t\t\tconsole.log(\"AAAA\");\r\n\t\t\tfixed = fixed.replace(/\"(<a [^>]*>(.*?)<\\/a>)\"/g, '\"$2\"');\r\n\t\t\tconsole.log(fixed);\r\n\t\t\tlet jsonObject = JSON.parse(fixed);\r\n\r\n\t\t\ttry {\r\n\t\t\t\t// Parse the cleaned string\r\n\r\n\t\t\t\t// Function to recursively clean keys\r\n\t\t\t\tconst extractTextFromKeys = (obj) => {\r\n\t\t\t\t\tif (typeof obj === 'object' && obj !== null) {\r\n\t\t\t\t\t\tObject.keys(obj).forEach(key => {\r\n\t\t\t\t\t\t\t// Process each key to remove HTML tags\r\n\t\t\t\t\t\t\tlet cleanKey = key.replace(/<a [^>]*>(.*?)<\\/a>/g, '$1');\r\n\t\t\t\t\t\t\tif (cleanKey !== key) {\r\n\t\t\t\t\t\t\t\t// Rename the key\r\n\t\t\t\t\t\t\t\tobj[cleanKey] = obj[key];\r\n\t\t\t\t\t\t\t\tdelete obj[key];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// Recurse for nested structures\r\n\t\t\t\t\t\t\tif (typeof obj[cleanKey] === 'object') {\r\n\t\t\t\t\t\t\t\textractTextFromKeys(obj[cleanKey]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Clean keys in the parsed JSON object\r\n\t\t\t\textractTextFromKeys(jsonObject);\r\n\t\t\t\t// Output the final processed JSON\r\n\t\t\t\tconsole.log(JSON.stringify(jsonObject, null, 2));\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"Error parsing JSON:\", error);\r\n\t\t\t}\r\n\t\t\treturn jsonObject\r\n\r\n\r\n\t\t},\r\n\t\tpronunciation() {\r\n\t\t\tif (!this.content.pronunciation || !this.content.pronunciation.all) return;\r\n\t\t\tconst regex = /u([0-9a-fA-F]{4})/g; // Match 'uXXXX' without backslashes\r\n\t\t\tconst replaceUnicodeMatches = (match, hexCode) => {\r\n\t\t\t\t// Convert the hexadecimal string (e.g., '026a') to an integer and return the corresponding Unicode character\r\n\t\t\t\treturn String.fromCharCode(parseInt(hexCode, 16));\r\n\t\t\t}\r\n\t\t\treturn this.content.pronunciation.all.replace(regex, replaceUnicodeMatches);\r\n\t\t},\r\n\t\taudio() {\r\n\t\t\tif (this.content.audio === \"\") return;\r\n\t\t\treturn new Audio(this.content.audio);\r\n\t\t},\r\n\t},\r\n\tmethods: {\r\n\t\tplayAudio() {\r\n\t\t\tthis.audio.play();\r\n\t\t},\r\n\r\n\t},\r\n\tmounted() {\r\n\t\tconsole.log(\"AA\");\r\n\t\tthis.fetchCategories(this.slug).then(() => this.isReady = true);\r\n\r\n\t}\r\n};\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Definition.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Definition.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Definition.vue?vue&type=template&id=f28481f0\"\nimport script from \"./Definition.vue?vue&type=script&lang=js\"\nexport * from \"./Definition.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import './VIcon.sass'\n\n// Mixins\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport Colorable from '../../mixins/colorable'\nimport Sizeable from '../../mixins/sizeable'\nimport Themeable from '../../mixins/themeable'\n\n// Util\nimport { convertToUnit, keys, remapInternalIcon } from '../../util/helpers'\n\n// Types\nimport Vue, { CreateElement, VNode, VNodeChildren, VNodeData } from 'vue'\nimport mixins from '../../util/mixins'\nimport { VuetifyIcon, VuetifyIconComponent } from 'vuetify/types/services/icons'\n\nenum SIZE_MAP {\n  xSmall = '12px',\n  small = '16px',\n  default = '24px',\n  medium = '28px',\n  large = '36px',\n  xLarge = '40px'\n}\n\nfunction isFontAwesome5 (iconType: string): boolean {\n  return ['fas', 'far', 'fal', 'fab', 'fad', 'fak'].some(val => iconType.includes(val))\n}\n\nfunction isSvgPath (icon: string): boolean {\n  return (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(icon) && /[\\dz]$/i.test(icon) && icon.length > 4)\n}\n\nconst VIcon = mixins(\n  BindsAttrs,\n  Colorable,\n  Sizeable,\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-icon',\n\n  props: {\n    dense: Boolean,\n    disabled: Boolean,\n    left: Boolean,\n    right: Boolean,\n    size: [Number, String],\n    tag: {\n      type: String,\n      required: false,\n      default: 'i',\n    },\n  },\n\n  computed: {\n    medium () {\n      return false\n    },\n    hasClickListener (): boolean {\n      return Boolean(\n        this.listeners$.click || this.listeners$['!click']\n      )\n    },\n  },\n\n  methods: {\n    getIcon (): VuetifyIcon {\n      let iconName = ''\n      if (this.$slots.default) iconName = this.$slots.default[0].text!.trim()\n\n      return remapInternalIcon(this, iconName)\n    },\n    getSize (): string | undefined {\n      const sizes = {\n        xSmall: this.xSmall,\n        small: this.small,\n        medium: this.medium,\n        large: this.large,\n        xLarge: this.xLarge,\n      }\n\n      const explicitSize = keys(sizes).find(key => sizes[key])\n\n      return (\n        (explicitSize && SIZE_MAP[explicitSize]) || convertToUnit(this.size)\n      )\n    },\n    // Component data for both font icon and SVG wrapper span\n    getDefaultData (): VNodeData {\n      return {\n        staticClass: 'v-icon notranslate',\n        class: {\n          'v-icon--disabled': this.disabled,\n          'v-icon--left': this.left,\n          'v-icon--link': this.hasClickListener,\n          'v-icon--right': this.right,\n          'v-icon--dense': this.dense,\n        },\n        attrs: {\n          'aria-hidden': !this.hasClickListener,\n          disabled: this.hasClickListener && this.disabled,\n          type: this.hasClickListener ? 'button' : undefined,\n          ...this.attrs$,\n        },\n        on: this.listeners$,\n      }\n    },\n    getSvgWrapperData () {\n      const fontSize = this.getSize()\n      const wrapperData = {\n        ...this.getDefaultData(),\n        style: fontSize ? {\n          fontSize,\n          height: fontSize,\n          width: fontSize,\n        } : undefined,\n      }\n      this.applyColors(wrapperData)\n\n      return wrapperData\n    },\n    applyColors (data: VNodeData): void {\n      data.class = { ...data.class, ...this.themeClasses }\n      this.setTextColor(this.color, data)\n    },\n    renderFontIcon (icon: string, h: CreateElement): VNode {\n      const newChildren: VNodeChildren = []\n      const data = this.getDefaultData()\n\n      let iconType = 'material-icons'\n      // Material Icon delimiter is _\n      // https://material.io/icons/\n      const delimiterIndex = icon.indexOf('-')\n      const isMaterialIcon = delimiterIndex <= -1\n\n      if (isMaterialIcon) {\n        // Material icon uses ligatures.\n        newChildren.push(icon)\n      } else {\n        iconType = icon.slice(0, delimiterIndex)\n        if (isFontAwesome5(iconType)) iconType = ''\n      }\n\n      data.class[iconType] = true\n      data.class[icon] = !isMaterialIcon\n\n      const fontSize = this.getSize()\n      if (fontSize) data.style = { fontSize }\n\n      this.applyColors(data)\n\n      return h(this.hasClickListener ? 'button' : this.tag, data, newChildren)\n    },\n    renderSvgIcon (icon: string, h: CreateElement): VNode {\n      const svgData: VNodeData = {\n        class: 'v-icon__svg',\n        attrs: {\n          xmlns: 'http://www.w3.org/2000/svg',\n          viewBox: '0 0 24 24',\n          role: 'img',\n          'aria-hidden': true,\n        },\n      }\n\n      const size = this.getSize()\n      if (size) {\n        svgData.style = {\n          fontSize: size,\n          height: size,\n          width: size,\n        }\n      }\n\n      return h(this.hasClickListener ? 'button' : 'span', this.getSvgWrapperData(), [\n        h('svg', svgData, [\n          h('path', {\n            attrs: {\n              d: icon,\n            },\n          }),\n        ]),\n      ])\n    },\n    renderSvgIconComponent (\n      icon: VuetifyIconComponent,\n      h: CreateElement\n    ): VNode {\n      const data: VNodeData = {\n        class: {\n          'v-icon__component': true,\n        },\n      }\n\n      const size = this.getSize()\n      if (size) {\n        data.style = {\n          fontSize: size,\n          height: size,\n          width: size,\n        }\n      }\n\n      this.applyColors(data)\n\n      const component = icon.component\n      data.props = icon.props\n      data.nativeOn = data.on\n\n      return h(this.hasClickListener ? 'button' : 'span', this.getSvgWrapperData(), [\n        h(component, data),\n      ])\n    },\n  },\n\n  render (h: CreateElement): VNode {\n    const icon = this.getIcon()\n\n    if (typeof icon === 'string') {\n      if (isSvgPath(icon)) {\n        return this.renderSvgIcon(icon, h)\n      }\n      return this.renderFontIcon(icon, h)\n    }\n\n    return this.renderSvgIconComponent(icon, h)\n  },\n})\n\nexport default Vue.extend({\n  name: 'v-icon',\n\n  $_wrapperFor: VIcon,\n\n  functional: true,\n\n  render (h, { data, children }): VNode {\n    let iconName = ''\n\n    // Support usage of v-text and v-html\n    if (data.domProps) {\n      iconName = data.domProps.textContent ||\n        data.domProps.innerHTML ||\n        iconName\n\n      // Remove nodes so it doesn't\n      // overwrite our changes\n      delete data.domProps.textContent\n      delete data.domProps.innerHTML\n    }\n\n    return h(VIcon, data, iconName ? [iconName] : children)\n  },\n})\n","import Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'sizeable',\n\n  props: {\n    large: Boolean,\n    small: Boolean,\n    xLarge: Boolean,\n    xSmall: Boolean,\n  },\n\n  computed: {\n    medium (): boolean {\n      return Boolean(\n        !this.xSmall &&\n        !this.small &&\n        !this.large &&\n        !this.xLarge\n      )\n    },\n    sizeableClasses (): object {\n      return {\n        'v-size--x-small': this.xSmall,\n        'v-size--small': this.small,\n        'v-size--default': this.medium,\n        'v-size--large': this.large,\n        'v-size--x-large': this.xLarge,\n      }\n    },\n  },\n})\n"],"names":["staticClass","_c","domProps","_vm","on","key","attrs","_e","staticRenderFns","name","mixins","postMixin","components","searchbar","siderbar","definition","computed","item","$store","state","content","rendered","replaceAll","trim","fixed","replace","console","log","jsonObject","JSON","parse","extractTextFromKeys","obj","Object","keys","forEach","cleanKey","stringify","error","pronunciation","all","regex","replaceUnicodeMatches","match","hexCode","String","fromCharCode","parseInt","audio","Audio","methods","playAudio","play","mounted","fetchCategories","slug","then","isReady","component","render","SIZE_MAP","isFontAwesome5","iconType","some","val","includes","isSvgPath","icon","test","length","VIcon","BindsAttrs","Colorable","Sizeable","Themeable","extend","props","dense","Boolean","disabled","left","right","size","Number","tag","type","required","default","medium","hasClickListener","this","listeners$","click","getIcon","iconName","$slots","text","remapInternalIcon","getSize","sizes","xSmall","small","large","xLarge","explicitSize","find","convertToUnit","getDefaultData","class","undefined","attrs$","getSvgWrapperData","fontSize","wrapperData","style","height","width","applyColors","data","themeClasses","setTextColor","color","renderFontIcon","h","newChildren","delimiterIndex","indexOf","isMaterialIcon","push","slice","renderSvgIcon","svgData","xmlns","viewBox","role","d","renderSvgIconComponent","nativeOn","Vue","$_wrapperFor","functional","children","textContent","innerHTML","sizeableClasses"],"sourceRoot":""}